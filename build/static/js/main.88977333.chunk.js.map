{"version":3,"sources":["Components/Algotable/algotable.js","Components/Form/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Algotable","arr","this","props","string","replace","split","className","algo","style","width","height","border","map","e","maxWidth","minWidth","Array","Number","frames","data","finalFramesTable","el","backgroundColor","length","totalPageHits","toFixed","totalPageFaults","Component","FormPage","state","stringInput","algorithm","dataRecived","onAlgoChange","bind","onStringChange","onFrameChange","handleSubmitClick","handleResetClick","evt","setState","preventDefault","apiurl","window","location","hostname","inputstring","axios","post","then","res","console","log","catch","err","center","md","getValue","value","label","group","type","selected","disabled","onClick","App","Form","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88977333.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Algotable extends Component {\n    \n    render() {\n        let arr = this.props.string.replace(/\\s/g, '').split(\"\")\n\n        return(\n            <div className=\"container px-0\">\n                <div className=\"jumbotron\">\n                    <h2 className=\"h1 text-center mb-5\">Summary for <span className=\"text-uppercase\">{this.props.algo}</span> Algorithm</h2>\n\n                    <div className=\"d-flex justify-content-center mb-4\">\n                        <table className=\"mx-0\" style={{width: '15%'}}>\n                            <tr style={{ height: '35px', border: '2px solid black' }} className=\"border-right-0\">\n                                <td className=\"text-center font-weight-bolder\">Page Sequence</td>\n                            </tr>\n                            {\n                                arr.map((e) => {\n                                    return <tr style={{ border: '2px solid black' }} className=\"border-right-0\">\n                                        <td className=\"text-center font-weight-bold\">{e}</td>\n                                    </tr>\n                                })\n                            }\n                        </table>\n                        <table className=\"mx-0\" style={{maxWidth: \"70vw\", minWidth: \"25vw\"}}>\n                            <tr style={{ height: '35px' }}>\n                                {\n                                    [...new Array(Number(this.props.frames))].map((e) => {\n                                        return <td className=\"text-center font-weight-bolder\" style={{ border: '2px solid black' }}>f</td>\n                                    })\n                                }\n                                <td className=\"text-center font-weight-bolder\" style={{ border: '2px solid black' }}>Page Hit/Miss</td>\n                            </tr>\n                            {\n                                this.props.data.finalFramesTable.map((el) => {\n                                    return <tr>\n                                        {\n                                            el.map((e) => {\n                                                if(e===\"hit\") {\n                                                    return <td style={{ backgroundColor: '#55FF00', border: '2px solid black' }} className=\"text-center font-weight-bold\">{e}</td>\n                                                }\n                                                else if(e===\"fault\") {\n                                                    return <td style={{ backgroundColor: '#ff4e36', border: '2px solid black' }} className=\"text-center font-weight-bold\">{e}</td>\n                                                }\n                                                return <td style={{ border: '2px solid black', minWidth: '50px' }} className=\"text-center font-weight-bold\">{e}</td>\n                                            })\n                                        }\n                                        </tr>\n                                })\n                            }\n                        </table>\n                    </div>\n        \n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"card border border-dark\" style={{width: \"22rem\"}}>\n                            <div className=\"card-body\">\n                                <p>Total Number of Pages: <span className=\"font-weight-bold\">{arr.length}</span></p>\n                                <p>Input Page Sequence: <span className=\"font-weight-bold\">{this.props.string}</span></p>\n                                <p>Number of Memory Frames: <span className=\"font-weight-bold\">{this.props.frames}</span></p>\n                                <p>Total Page Hits: <span className=\"font-weight-bold\">{this.props.data.totalPageHits}</span></p>\n                                <p>Hit Rate: <span className=\"font-weight-bold\">{(this.props.data.totalPageHits/arr.length*100).toFixed(2)}%</span></p>\n                                <p>Total Page Faults: <span className=\"font-weight-bold\">{this.props.data.totalPageFaults}</span></p>\n                                <p>Fault Rate: <span className=\"font-weight-bold\">{(this.props.data.totalPageFaults/arr.length*100).toFixed(2)}%</span></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Algotable","import React, { Component } from 'react'\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBSelect, MDBSelectInput, MDBSelectOption, MDBSelectOptions } from 'mdbreact';\nimport Algotable from '../Algotable/algotable'\nimport axios from 'axios'\n\nclass FormPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            stringInput: '',\n            frames: 0,\n            algorithm: null,\n            dataRecived: false,\n            data: []\n        }\n\n        this.onAlgoChange = this.onAlgoChange.bind(this)\n        this.onStringChange = this.onStringChange.bind(this)\n        this.onFrameChange = this.onFrameChange.bind(this)\n        this.handleSubmitClick = this.handleSubmitClick.bind(this)\n        this.handleResetClick = this.handleResetClick.bind(this)\n    }\n\n    onStringChange(evt) {\n        this.setState({ stringInput: evt })\n    }\n\n    onFrameChange(evt) {\n        this.setState({ frames: evt })\n    }\n\n    onAlgoChange(evt) {\n        this.setState({ algorithm: evt })\n    }\n\n    async handleSubmitClick(evt) {\n        evt.preventDefault()\n        if(this.state.algorithm!==null  && this.state.frames!==0 && this.state.stringInput!=='' && this.state.stringInput!==' ') {\n            const apiurl = `http://${window.location.hostname}:3000/resolve`\n            const inputstring = this.state.stringInput\n            const frames = this.state.frames\n            const algo = this.state.algorithm\n            await axios.post(apiurl, {inputstring, frames, algo}).then((res) => {\n                console.log(res.data)\n                this.setState({ dataRecived: true, data: res.data })\n\n            }).catch((err) => {\n                console.log(\"There was an Error Submitting Your Response\\n\")\n                console.log(err)\n            })\n        }\n    }\n\n    handleResetClick() {\n      this.setState({ stringInput: '', frames: 0, algorithm: null, dataRecived: false, data: [] })\n    }\n\n    render() {\n        return (\n          <div>\n            <MDBContainer>\n              <MDBRow center=\"true\">\n                <MDBCol md=\"7\">\n                  <MDBCard>\n                    <div className=\"header py-3 peach-gradient\" style={{ backgroundColor: 'black' }}>\n                      <MDBRow className=\"d-flex justify-content-center\">\n                        <h3 className=\"text-light mb-3 pt-3 font-weight-bold\">Page Replacement Algorithm Visualizer</h3>\n                      </MDBRow>\n                    </div>\n                    <MDBCardBody className=\"mx-4 mt-4\">\n                        \n                        <MDBInput getValue={this.onStringChange} value={this.state.stringInput} label=\"Input String (space seperated)\" group type=\"text\" />\n                        <MDBInput getValue={this.onFrameChange} value={this.state.frames} label=\"Frames Size\" group type=\"number\" />\n                        <MDBSelect getValue={this.onAlgoChange} >\n                        <MDBSelectInput selected=\"Replacement Algorithm\" />\n                        <MDBSelectOptions>\n                            <MDBSelectOption disabled>Choose an Option</MDBSelectOption>\n                            <MDBSelectOption value=\"First In First Out\">First In First Out</MDBSelectOption>\n                            <MDBSelectOption value=\"Optimal\">Optimal</MDBSelectOption>\n                            <MDBSelectOption value=\"Least Recently Used\">Least Recently Used</MDBSelectOption>\n                        </MDBSelectOptions>\n                        </MDBSelect>\n\n                        <MDBRow className=\"d-flex align-items-center mb-4 mt-5\">\n                        <MDBCol className=\"\">\n                          <div className=\"text-center mb-1\">\n                              <button onClick={this.handleResetClick} className=\"btn btn-lg btn-block btn-danger\">RESET</button>\n                          </div>\n                          <div className=\"text-center mt-1\">\n                              <button onClick={this.handleSubmitClick} className=\"btn btn-lg btn-block btn-success\">VISUALIZE</button>\n                          </div>\n                        </MDBCol>\n                      </MDBRow>\n                    </MDBCardBody>\n                  </MDBCard>\n                </MDBCol>\n              </MDBRow>\n            </MDBContainer>\n\n            <div className=\"mt-3\">\n            {\n              this.state.dataRecived ? \n              (<Algotable data={this.state.data} frames={this.state.frames}\n                algo={this.state.algorithm} string={this.state.stringInput} />)\n              :\n              (null)\n            }\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default FormPage;","import React, { Component } from 'react'\nimport Form from './Components/Form/Form'\nimport './App.css'\n\nclass App extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"mt-5\">\n\t\t\t\t\t<Form />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}